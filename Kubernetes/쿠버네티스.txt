쿠버네티스란?

추가도구이다. 프레임워크, 개념 모음, 표준이라고 할 수있다.
컨테이너 오케스트레이션과 대규모 배포에 도움이 되는 도구이자 프레임워크! 

컨테이너화된 애플리케이션의 배포, 확장 및 관리를 자동화하기 위한 오픈 소스 시스템이다.
즉 컨테이너 배포에 도움이 되는 것, 도구 및 작업 방법의 모음.

컨테이너를 수동으로 배포하는 것은 AWS에 EC2 인스턴스를 생성하여 도커를 설치하고 컨테이너 실행하는 것
이렇게 할 때 문제가 생긴다.
1. EC2 인스턴스를 자체적으로 관리해고 구성해야한다.
2. 그 인스턴스의 소프트웨어와 운영 체제가 업데이트된 상태를 유지해야한다.
3. 컨테이너가 충돌하거나 다운될 수 있으며 새 컨테이너로 교체해야한다.
4. 컨테이너들을 수동으로 모니터링해야한다. 

많은 트래픽이 생기면 컨테이너 수를 증가시켜 들어오는 트래픽을 줄이면서 여러 컨테이너에 분산시킨다.
트래픽이 줄어들면 다시 컨테이너를 줄인다.
HTTP 트래픽도 실행중인 컨테이너 인스턴스에 균등하게 분산시킨다.

AWS ECS 같은 클라우드 프로바이더에서 위의 문제를 해결 할 수 있다.
하지만 특정 클라우드 서비스를 사용한다면 그 서비스에 고정된다.
ECS의 경우 AWS에서 정의한대로 모든 것을 구성해야 한다.
다른 프로바이더로 변경하려면 그 프로바이더의 세부 정보와 프로바이더가 제공하는 서비스를 알아야 하고
AWS ECS에 사용한 구성을 다른 프로바이더의 서비스에 맞게 수동으로 변경해야한다.
이런 문제를 쿠버네티스가 도와줄 것이다.

쿠버네티스로 배포하는 방식, 컨테이너 스케일링, 모니터링 방법과 컨테이너를 교체하는 방법등을 정의할 수 있는 방식을 가진다.
원하는 배포를 정의하는 구성파일, 배포할 컨테이너, 인스턴스 수 등, 스케일 확장하는지 등을
클라우드 프로바이더 또는 우리의 자체 머신에 전달한다.
배포를 설명하는 표준화된 방식을 갖는 것! 배포용 도커 컴포즈와 비슷한 느낌이다.

쿠버네티스 아키텍처
컨테이너를 Pod라고 부른다. 쿠버네티스에서 가장 작은 단위이다. pod는 항상 함께 작동해야하는 여러 컨테이너를 보유할 수 있다.
워커노드에서 이 포드를 실행한다. 즉 워커 노드가 포드를 감싸는 상위개념이다. 컨테이너를 실행하는 k8s 세계 내의 것
EC2와 비슷하다. 동일한 워커 노드 중 하나에서 둘 이상의 포드를 실행할 수 있다.
k8s에는 프록시가 필요하다. 워커 노드에의 포드 네트워크 트래픽 제어를 설정하는 도구이다. 즉 프록시는 기본적으로 이러한 포드가 인터넷에 연결할 수 있는지 여부와
이러한 포드 및 내부에서 실행되는 컨테이너를 외부 세계에서 어떻게 접근할 수 있는지를 제어한다. 
사용자의 외부 트래픽이 이 컨테이너에 도달할 수 있도록 프록시를 구성해야한다.
큰 프로젝트에선 일반적으로 둘 이상의 워커노드가 존재

마스터 노드안의 컨트롤 플레인이 스케일링 같은 관리를 수행한다.
k8s에서 일반적으로 워커노드 또는 포드와 직접 상호작용하지 않지만 컨트롤 플레인이 그 일을 한다.
일반적으로 마스터노드는 컨트롤플레인만 가지고 있지만 더 큰 배포의 경우는 고가용성을 위해 자체적으로 여러 머신에 분할될 수 있는 마스터 노드가 있다.

위의 모든 것이 클러스터를 형성한다. 이 모든 부분이 연결된 하나의 네트워크를 형성한다.

쿠버네티스를 사용하기 위한 환경
쿠버네티스를 실행할 수 있는 특정 환경을 제공해야 한다.
클러스터와 워커노드, 마스터노드를 설정해야한다.
컨테이너를 배포하기 위한 Docker Compose와 비슷하다.

워커 노드 
EC2, 로컬 컴퓨터 등이다. 마스터 노드에서 관리한다.
워커노드 안에는 Pod가 존재하고 포드엔 하나 이상의 애플리케이션 컨테이너와 config가 있다.
kubelet, Docker, Kube-proxy를 가지고 있다. 
Kube-Proxy는 들어오고 나가는 트래픽을 처리한다.

마스터 노드
가장 중요한 서비스는 구동되고 있는 API 서버이다. 카운터 포인트인 마스터 노드 머신에서 실행되는 간단한 서비스이다.
워커와 마스터 노드 간의 통신을 위한 카운터 파트이다.
스케줄러 : 새로운 포드를 관찰하고 어떤 워커노드가 실행되어야 하는지 선택한다.
큐브 컨트롤러 매니저 : 워커 노드 전체를 감시하고 제어한다. 적당한 수의 포드가 가동되는지 확인한다.
클라우드 컨트롤러 매니저 : aws, microsoft azure 등 클라우드 프로바이더에게 무엇을 해야 하는지 알려준다.

쿠버네티스 객체
pods, deployments, services, volume 이 객체들은 명령적, 선언적 방법으로 생성 가능하다.
쿠버네티스에게 pods를 생성해야한다고 알리면 컨테이너를 실행하며 코드나 명령으로 객체를 생성한다.
Pods나 외부 세계와 통신할 수 있다. 디폴트로 Pods 에는 클러스터 내부 IP 주소가 존재한다.
AWS의 태스크는 쿠버네티스의 Pods 와 비슷하다. 

Pod는 임시적이다. 쿠버네티스에 의해 교체되거나 제거되면 모든 pods의 리소스는 손실된다.
볼륨처럼 유지하는 방법이 있다. 컨테이너도 이와 같이 작동한다. 실패한 Pod를 교체하기 위해
쿠버네티스를 사용하지 않는다면 컨테이너를 수동으로 관리해야 한다. 
즉 Pod 객체를 만들어 클러스터로 보내는 것이 아니라 컨트롤러 객체, 특히 Pod를 생성하는
deployment 객체를 만드는 이유이다.

 